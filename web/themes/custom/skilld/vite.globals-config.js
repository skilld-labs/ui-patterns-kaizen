import { basename, extname, resolve } from 'path';
import { sync } from 'glob';

export const cssBuild = (inputPrefixPath = '') => {
  return {
    base: '',
    resolve: {
      alias: {
        '@images': resolve(__dirname, '/images'),
        '@fonts': resolve(__dirname, '/fonts'),
      },
    },
    build: {
      emptyOutDir: false,
      minify: false,
      rollupOptions: {
        input: sync(`${inputPrefixPath}/**/*.src.css`, {
          ignore: `${inputPrefixPath}/**/_*.src.css`,
        }),
        output: {
          dir: '.',
          assetFileNames: ({ name }) => {
            const ext = extname(name);
            if (ext === '.css') {
              return sync(`${inputPrefixPath}/**/*.src.css`, {
                ignore: `${inputPrefixPath}/**/_*.src.css`,
              })
                .find((a) => a.includes(basename(name)))
                .replace('.src', '');
            }
            if (['.woff2', '.woff', '.ttf', '.otf', '.eot'].includes(ext)) {
              return 'fonts/[name].[ext]';
            }
            if (
              [
                '.svg',
                '.png',
                '.jpeg',
                '.jpg',
                '.gif',
                '.avif',
                '.webp',
              ].includes(ext)
            ) {
              return sync(`images/**/${name}`)[0];
            }
            return 'dist/[name].[ext]';
          },
        },
      },
    },
  };
};

export const jsBuild = (inputPrefixPath = '') => {
  return {
    base: '',
    build: {
      emptyOutDir: false,
      minify: false,
      rollupOptions: {
        input: sync(`${inputPrefixPath}/**/*.src.js`),
        output: {
          dir: '.',
          banner: `
          /**
            * DO NOT EDIT THIS FILE.
            * It's generated automatically by 'yarn build' command.
            * @preserve
          **/
        `,
          entryFileNames: ({ name }) =>
            sync(`${inputPrefixPath}/**/*.src.js`)
              .find((a) => a.includes(basename(name)))
              .replace('.src', ''),
        },
      },
    },
  };
};
