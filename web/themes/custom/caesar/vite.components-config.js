import { basename, extname } from 'path';
import { defineConfig } from 'vite';
import { sync } from 'glob';
import viteGlobals from './vite.globals-config';

export default defineConfig({
  ...viteGlobals,
  build: {
    minify: false,
    emptyOutDir: false,
    rollupOptions: {
      input: [
        ...sync('src/*.src.js', {}),
        ...sync('src/*.src.mjs', {}),
        ...sync('src/*.pcss.css', {}),
      ],
      output: {
        dir: '.',
        entryFileNames: ({ name }) => {
          return `${basename(name).replace('.src', '')}.js`;
        },
        assetFileNames: ({ name }) => {
          const vendorPrefix = basename(name).includes('vendor.')
            ? 'vendor/'
            : '';
          return `${vendorPrefix}${basename(name).replace('.pcss', '')}`;
        },
        chunkFileNames: 'vendor/[name]',
        manualChunks: (id, { getModuleInfo }) => {
          const module = getModuleInfo(id);

          // if file is imported from .mjs it bay became chunk
          // in other case bundle
          if (module.importers.length) {
            if (extname(module.importers[0]) === '.mjs') {
              return `vendor.${basename(id)}`;
            }
          }
        },
        banner: `/**
         * DO NOT EDIT THIS FILE.
         * It's generated automatically by 'yarn build' command.
         * @preserve
         * */`,
      },
    },
  },
});
